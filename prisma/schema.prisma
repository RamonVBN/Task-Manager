// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum UserRole {
  member
  admin
}

enum Priority {
  high
  medium
  low
}

enum Status {
  pending
  in_progress
  completed
}


model User{
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  role UserRole @default(member)

  team_member Team_Member? 

  tasks Task[]

  tasks_histories Task_History[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")


  @@map("users")
}

model Team {
  id Int @id @default(autoincrement())
  name String 
  description String
  
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  team_members Team_Member[]

  tasks Task[]

  @@map("teams")
}

model Team_Member {

  id Int @id @default(autoincrement())

  user User @relation(fields: [user_id], references: [id])

  user_id Int @unique

  team Team @relation(fields: [team_id], references: [id])

  team_id Int

  createdAt DateTime @default(now()) @map("created_at")

  @@map("teams-members")
}

model Task {
  id Int @id @default(autoincrement())
  title String
  description String
  status Status @default(pending)
  priority Priority



  assigned_to Int

  user User @relation(fields: [assigned_to], references: [id])

  team_id Int

  teams Team @relation(fields: [team_id],references: [id])


  task_histories Task_History[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("tasks")
}

model Task_History {
  id Int @id @default(autoincrement()) 

  task_id Int 

  task Task @relation(fields: [task_id], references: [id])

  changedBy Int @map("changed_by")

  user User @relation(fields: [changedBy], references: [id])

  oldStatus Status @map("old_status")

  newStatus Status @map("new_status")

  changedAt DateTime @updatedAt @map("changed_at")

  @@map("tasks_histories")
}
